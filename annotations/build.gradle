buildscript {

    ext.buildMaven = { p -> repositories { maven { url p } } }


    repositories {
        mavenLocal()
        google()
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.+'
    }

}

plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.3.50'
    id("maven-publish")
}
apply plugin: 'com.jfrog.bintray'

group = "de.ffuf.kotlin.multiplatform.annotations"
version = "1.0.6"

repositories {

    jcenter()
    mavenCentral()
}

kotlin {
    jvm()
    js()
    iosX64()
    iosArm64()
    iosArm32()

    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')

            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }

        jsMain {
            dependencies {
                implementation kotlin('stdlib-js')

            }
        }
        jsTest {
            dependencies {
                implementation kotlin('test-js')
            }
        }

        jvmMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
            }
        }
        jsTest {
            dependencies {
                implementation kotlin('test-js')
            }
        }

    }
}

build.finalizedBy(publishToMavenLocal)

def pomConfig = {
    licenses {
        license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution 'repo'
        }
    }
    developers {
        developer {
            id "Jonas Bark"
            name "Jonas Bark"
            organization "FFUF"
            organizationUrl "http://twitter.com/boni2k"
        }
        developer {
            id "FFUF"
            name "Feil Feil & Feil GmbH"
            organization "FFUF"
            organizationUrl "http://www.ffuf.de"
        }
    }
    scm {
        url "https://github.com/feilfeilundfeil/kotlin-native-suspend-function-callback"
    }
}

bintray {
    user = bintray_user
    key = bintray_api_key
    pkg {
        repo = "ffuf"
        name = "kotlin-native-suspend-function-callback-annotations"
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/feilfeilundfeil/kotlin-native-suspend-function-callback'
        version {
            name = project.version
            desc = 'Initial bintray release'
            released = new Date()
        }

    }
}

bintrayUpload.doFirst {
    publications = []
    def projectPublications = project.publishing.publications
    for (publication in projectPublications) {
        if (publication.artifactId.endsWith("-test")) {
            continue
        }
        publications += publication.name
    }
}
bintrayUpload.dependsOn(publishToMavenLocal)
